import asyncio
import math
from tiktokdownloader import video
from aiogram import Router, F
from aiogram.filters import Command,CommandObject
from aiogram.types import Message,CallbackQuery,FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from database.db import Users
from config import bot
import os
from buttons.button import main_buttons,main_menuss

from redactor import redact_video
class Amount(StatesGroup):
    q1 = State()

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message,command: CommandObject,state: FSMContext):
    text = '<b>–ü—Ä–∏–≤–µ—Ç! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –≤–∏–¥–µ–æ–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª–µ–≥–∫–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –≤–∏–¥–µ–æ –≤ –≤–∏–¥–µ–æ-–∑–∞–º–µ—Ç–∫–∏. üìπ‚ú®\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∏–¥–µ–æ, –∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ –≤–∏–¥–µ–æ-–∑–∞–º–µ—Ç–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —á–∞—Ç–µ. –ù–∞—á–Ω–∏—Ç–µ —Å–µ–π—á–∞—Å –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏!</b>'
    Users(message.from_user.id).add_user()
    await message.answer(text=text,reply_markup=main_buttons())

@router.callback_query(F.data=='main_menu')
async def main_menu(call: CallbackQuery,state:FSMContext):
    await state.clear()
    await call.message.delete()
    text = '<b>–ü—Ä–∏–≤–µ—Ç! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –≤–∏–¥–µ–æ–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª–µ–≥–∫–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –≤–∏–¥–µ–æ –≤ –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫. üìπ‚ú®\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∏–¥–µ–æ, –∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫. –ù–∞—á–Ω–∏—Ç–µ —Å–µ–π—á–∞—Å –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏!</b>'
    await call.message.answer(text=text, reply_markup=main_buttons())


@router.callback_query(F.data=='profile')
async def profile(call: CallbackQuery):
    await call.message.delete()

    text = f'<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{call.from_user.username} (ID: {call.from_user.id})'
    await call.message.answer(text=text)



@router.message(F.video)
async def convert(message: Message):

    if message.video.duration > 60*3:
        await message.answer('<b>–í–∏–¥–µ–æ –¥–ª–∏—Ç—Å—è –±–æ–ª—å—à–µ 60 —Å–µ–∫—É–Ω–¥!\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –Ω–µ –±–æ–ª–µ–µ 60 —Å–µ–∫—É–Ω–¥!</b>')
        return

    else:
        if message.video.file_size/(2**20) > 20:
            await message.answer('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–µ–ª–µ–≥—Ä–∞–º–º –º–æ–∂–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å —Ñ–∞–π–ª—ã –Ω–µ –±–æ–ª–µ–µ 20–º–±.\n–ò–∑–º–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏</b>')
            return


        first = await message.reply('<b>–≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è!</b>')

        file_path = await bot.get_file(message.video.file_id)
        second = await bot.edit_message_text(text='<b>–í–∏–¥–µ–æ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è!</b>',message_id=first.message_id,chat_id=message.from_user.id)
        await bot.download_file(file_path.file_path, destination=f"media/{message.from_user.id}_input_video.mp4",timeout=60)
        third = await bot.edit_message_text('<b>–í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è!</b>',message_id=second.message_id,chat_id=message.from_user.id)
        redact_video(message.from_user.id)

        document = FSInputFile(f"media/{message.from_user.id}_output_video.mp4")
        await bot.delete_message(message_id=third.message_id,chat_id=message.from_user.id)
        Users(message.from_user.id).minus_count(1)
        await bot.send_video_note(message.from_user.id,video_note=document)

        if os.path.exists(f"media/{message.from_user.id}_input_video.mp4"):
            os.remove(f"media/{message.from_user.id}_input_video.mp4")
        if os.path.exists(f"media/{message.from_user.id}_output_video.mp4"):
            os.remove(f"media/{message.from_user.id}_output_video.mp4")



@router.message(F.text.startswith('https://vt.tiktok.com'))
@router.message(F.text.startswith('vt.tiktok.com'))
@router.message(F.text.startswith('https://www.tiktok.com'))
@router.message(F.text.startswith('www.tiktok.com'))
async def tiktok(message: Message):
    link = message.text
    video_status = video(message.from_user.id,link)
    if video_status != "–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ!":
        await message.answer(video_status)
    else:
        name = f"media/{message.from_user.id}_tiktok.mp4"
        document = FSInputFile(name)

        await message.answer_video(document)
        os.rename(f"media/{message.from_user.id}_tiktok.mp4",f"media/{message.from_user.id}_input_video.mp4")
        check = redact_video(message.from_user.id)
        if check is None:
            document = FSInputFile(f"media/{message.from_user.id}_input_video.mp4")
            await message.answer_video_note(document)
            if os.path.exists(f"media/{message.from_user.id}_input_video.mp4"):
                os.remove(f"media/{message.from_user.id}_input_video.mp4")
            if os.path.exists(f"media/{message.from_user.id}_output_video.mp4"):
                os.remove(f"media/{message.from_user.id}_output_video.mp4")







